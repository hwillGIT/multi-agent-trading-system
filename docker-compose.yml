version: '3.8'

services:
  trading-system:
    build: .
    container_name: trading_system_app
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - postgres
      - redis
    networks:
      - trading_network
    ports:
      - "8000:8000"
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: trading_postgres
    environment:
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trading_network
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: trading_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - trading_network
    ports:
      - "6379:6379"
    restart: unless-stopped

  jupyter:
    build: .
    container_name: trading_jupyter
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./:/app
      - ./data:/app/data
      - ./notebooks:/app/notebooks
    depends_on:
      - postgres
      - redis
    networks:
      - trading_network
    ports:
      - "8888:8888"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: trading_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - trading_network
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - trading_network
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  trading_network:
    driver: bridge